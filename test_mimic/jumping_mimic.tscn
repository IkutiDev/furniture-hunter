[gd_scene load_steps=13 format=3 uid="uid://cxqoowsl0nxmp"]

[ext_resource type="Texture2D" uid="uid://2e1qky7w1am" path="res://test_mimic/oczy.png" id="1_4ng3n"]

[sub_resource type="Shader" id="Shader_4ng3n"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.5.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float crunch = 1.0;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
	VERTEX.y *= crunch;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_tendh"]
render_priority = 0
shader = SubResource("Shader_4ng3n")
shader_parameter/albedo = Color(0.4386491, 0.7335513, 0.9213809, 1)
shader_parameter/albedo_texture_size = Vector2i(0, 0)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/crunch = 1.0

[sub_resource type="CylinderMesh" id="CylinderMesh_hmwdg"]
top_radius = 0.3
height = 1.5

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_hmwdg"]
albedo_color = Color(0.4386491, 0.7335513, 0.9213809, 1)

[sub_resource type="BoxMesh" id="BoxMesh_4ng3n"]
size = Vector3(1, 0.6, 0.75)

[sub_resource type="Animation" id="Animation_4ng3n"]
resource_name = "bounce"
length = 1.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material_override:shader_parameter/crunch")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.4, 1.0333333, 1.2666667),
"transitions": PackedFloat32Array(2, 2, -0.5),
"update": 0,
"values": [1.0, 0.4, 1.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.4, 1.0333333, 1.2666667),
"transitions": PackedFloat32Array(2, -2, 2),
"update": 0,
"values": [Vector3(0, 0.8, 0), Vector3(0, 0.34, 0), Vector3(0, 3, 0)]
}

[sub_resource type="Animation" id="Animation_tendh"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material_override:shader_parameter/crunch")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0.793, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_6wrm8"]
_data = {
&"RESET": SubResource("Animation_tendh"),
&"bounce": SubResource("Animation_4ng3n")
}

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_4ng3n"]
albedo_color = Color(0.030330122, 0.37651074, 2.3102762e-06, 1)

[sub_resource type="PlaneMesh" id="PlaneMesh_tendh"]
material = SubResource("StandardMaterial3D_4ng3n")
size = Vector2(400, 400)

[sub_resource type="Environment" id="Environment_svsu0"]
background_mode = 1
background_color = Color(0.707892, 0.608592, 0.478294, 1)
ambient_light_color = Color(1, 1, 1, 1)

[node name="Node3D" type="Node3D"]

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.95051575, 0.31067643, 0, -0.31067643, 0.95051575, 0, 2.545, 2.897)

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.793, 0)
material_override = SubResource("ShaderMaterial_tendh")
mesh = SubResource("CylinderMesh_hmwdg")

[node name="Eyes" type="Sprite3D" parent="MeshInstance3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.008259535, 0.4092896)
pixel_size = 0.0013
texture = ExtResource("1_4ng3n")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="MeshInstance3D"]
visible = false
material_override = SubResource("StandardMaterial3D_hmwdg")
mesh = SubResource("BoxMesh_4ng3n")
skeleton = NodePath("../..")

[node name="AnimationPlayer" type="AnimationPlayer" parent="MeshInstance3D"]
libraries = {
&"": SubResource("AnimationLibrary_6wrm8")
}
autoplay = "bounce"

[node name="Sprite3D" type="Sprite3D" parent="MeshInstance3D"]

[node name="Floor" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_tendh")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_svsu0")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.371139e-08, 1, 0, -1, -4.371139e-08, 0, 14.309921, 0)
light_color = Color(1, 1, 0.6039216, 1)
light_energy = 2.0
shadow_enabled = true
